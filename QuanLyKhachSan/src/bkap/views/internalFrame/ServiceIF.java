/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bkap.views.internalFrame;

import bkap.dao.impl.CategoryServiceDAO;
import bkap.dao.impl.ServiceDAO;
import bkap.dao.impl.UnitDAO;
import bkap.model.CategoryService;
import bkap.model.Service;
import bkap.model.Unit;
import bkap.utils.SystemConstant;
import bkap.utils.Utils;
import bkap.views.LoginDialog;
import java.awt.Color;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hongb
 */
public class ServiceIF extends javax.swing.JInternalFrame {

    private CategoryServiceDAO catServiceDao = new CategoryServiceDAO();
    private ServiceDAO serviceDao = new ServiceDAO();
    private UnitDAO unitDao = new UnitDAO();

    private List<CategoryService> listCatSer;
    private List<Service> listSer;
    private List<Unit> listUnit;

    private DefaultTableModel modelService;
    private DefaultComboBoxModel modelCatService;
    private DefaultComboBoxModel modelUnit;

    private int id;
    private String name;
    private String catSerName;
    private String price;
    private String unitName;

    Locale localeVN = new Locale("vi", "VN");
    NumberFormat vn = NumberFormat.getInstance(localeVN);

    /**
     * Creates new form ServiceIF
     */
    public ServiceIF() {
        initComponents();
        listCatSer = catServiceDao.findAll();
        listSer = serviceDao.findAll();
        listUnit = unitDao.findAll();
        modelService = (DefaultTableModel) tblSer.getModel();
        modelCatService = (DefaultComboBoxModel) cbCatSer.getModel();
        modelUnit = (DefaultComboBoxModel) cbUnit.getModel();
        setComboxModel(listCatSer);
        setComboxModel(listUnit);
        setDataTable(listSer);
        
        if (LoginDialog.levelUser == SystemConstant.LEVEL_USER) {
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }

    private <T> void setComboxModel(List<T> list) {
        if (list.get(0) instanceof CategoryService) {
            List<CategoryService> data = (List<CategoryService>) list;
            for (CategoryService item : data) {
                modelCatService.addElement(item.getName());
            }
        }
        if (list.get(0) instanceof Unit) {
            List<Unit> data = (List<Unit>) list;
            for (Unit item : data) {
                modelUnit.addElement(item.getName());
            }
        }
    }

    private void setDataTable(List<Service> listS) {
        modelService.setRowCount(0);
        for (Service data : listS) {
            for (CategoryService listCat : listCatSer) {
                if (data.getCatService() == listCat.getId()) {
                    for (Unit listU : listUnit) {
                        if (data.getUnit() == listU.getId()) {
                            modelService.addRow(new Object[]{
                                data.getName(), listCat.getName(), vn.format(data.getPrice()), listU.getName()
                            });
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbCatSer = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbUnit = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSer = new javax.swing.JTable();
        msgInfomation = new javax.swing.JLabel();
        txtKeySearch = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Dịch vụ");

        jLabel1.setText("Tên dịch vụ");

        jLabel2.setText("Loại dịch vụ");

        jLabel3.setText("Giá");

        jLabel4.setText("Đơn vị");

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_add_20px.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_remove_20px.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_edit_20px.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_refresh_20px.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(240, 240, 240));

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_search_20px.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblSer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên dịch vụ", "Loại dịch vụ", "Giá", "Đơn vị"
            }
        ));
        tblSer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSer);

        txtKeySearch.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        txtKeySearch.setForeground(new java.awt.Color(153, 153, 153));
        txtKeySearch.setText("Tên dịch vụ");
        txtKeySearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKeySearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKeySearchFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName)
                            .addComponent(cbCatSer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cbUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKeySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(msgInfomation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbCatSer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtKeySearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(msgInfomation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        getValueOfFields();
        if (checkValidate()) {
            Service s = setPropertiesForObject();
            serviceDao.add(s);
            Utils.setMessageInformation(msgInfomation, SystemConstant.MSG_SUCCESSFUL_UPDATE, true);
            setNullValueFields();
            listSer = serviceDao.findAll();
            setDataTable(listSer);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblSerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSerMouseClicked
        // TODO add your handling code here:
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
        int indexSelected = tblSer.getSelectedRow();
        Service ser = listSer.get(indexSelected);
        id = ser.getId();
        txtName.setText(ser.getName());
        txtPrice.setText((int) ser.getPrice() + "");
        for (CategoryService listC : listCatSer) {
            if (ser.getCatService() == listC.getId()) {
                cbCatSer.setSelectedItem(listC.getName());
            }
        }
        for (Unit listU : listUnit) {
            if (ser.getUnit() == listU.getId()) {
                cbUnit.setSelectedItem(listU.getName());
            }
        }

    }//GEN-LAST:event_tblSerMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        getValueOfFields();
        if (checkValidate()) {
            Service ser = setPropertiesForObject();
            int i = JOptionPane.showConfirmDialog(cbUnit, SystemConstant.CONFIRM_UPDATE);
            if (i == 0) {
                serviceDao.edit(ser);
                Utils.setMessageInformation(msgInfomation, SystemConstant.MSG_SUCCESSFUL_UPDATE, true);
                setNullValueFields();
                listSer = serviceDao.findAll();
                setDataTable(listSer);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        Service ser = setPropertiesForObject();
        int i = JOptionPane.showConfirmDialog(cbUnit, SystemConstant.CONFIRM_DELETE);
        if (i == 0) {
            serviceDao.delete(ser.getId());
            Utils.setMessageInformation(msgInfomation, SystemConstant.MSG_SUCCESSFUL_UPDATE, true);
            setNullValueFields();
            listSer = serviceDao.findAll();
            setDataTable(listSer);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
       String keySearch = txtKeySearch.getText();
        if (keySearch.equals("Tên dịch vụ")) {
            Utils.setMessageInformation(msgInfomation, "Vui lòng nhạp tên dịch vụ cần tìm kiếm!", false);
        } else {
            listSer = serviceDao.findByName(keySearch);
            if (listSer.isEmpty()) {
                Utils.setMessageInformation(msgInfomation, SystemConstant.ERROR_NO_RESULT, false);
            } else {
                msgInfomation.setText("");
            }
            setDataTable(listSer);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtKeySearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKeySearchFocusGained
        if (txtKeySearch.getText().equals("Tên dịch vụ")) {
            txtKeySearch.setText("");
            txtKeySearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtKeySearchFocusGained

    private void txtKeySearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKeySearchFocusLost
        if (txtKeySearch.getText().equals("")) {
            txtKeySearch.setText("Tên dịch vụ");
            txtKeySearch.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_txtKeySearchFocusLost

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        setNullValueFields();
        txtKeySearch.setText("Tên dịch vụ");
        txtKeySearch.setForeground(new Color(153,153,153));
        listSer = serviceDao.findAll();
        setDataTable(listSer);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void getValueOfFields() {
        id = id;
        name = txtName.getText();
        price = txtPrice.getText();
        catSerName = cbCatSer.getSelectedItem().toString();
        unitName = cbUnit.getSelectedItem().toString();
    }

    private boolean checkValidate() {
        boolean check = false;
        getValueOfFields();
        if (name.isEmpty()) {
            Utils.setMessageInformation(msgInfomation, "Vui lòng nhập tên dịch vụ!", false);
        } else if (!name.matches("^[a-zA-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s\\W|_]+$")) {
            Utils.setMessageInformation(msgInfomation, "Vui lòng tên dịch vụ không nhập kí tự đặc biệt!", false);
        } else if (!price.matches("^[0-9]+$")) {
            Utils.setMessageInformation(msgInfomation, "Giá tiền không hợp lệ!", false);
        } else {
            check = true;
        }
        return check;
    }

    private Service setPropertiesForObject() {
        Service s = new Service();
        s.setId(id);
        s.setName(name);
        s.setPrice(Float.parseFloat(price));
        for (CategoryService row : listCatSer) {
            if (row.getName().equals(catSerName)) {
                s.setCatService(row.getId());
            }
        }
        for (Unit row : listUnit) {
            if (row.getName().equals(unitName)) {
                s.setUnit(row.getId());
            }
        }
        return s;
    }

    private void setNullValueFields() {
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        txtName.setText("");
        txtPrice.setText("");
        cbCatSer.setSelectedIndex(0);
        cbUnit.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbCatSer;
    private javax.swing.JComboBox cbUnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel msgInfomation;
    private javax.swing.JTable tblSer;
    private javax.swing.JTextField txtKeySearch;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
